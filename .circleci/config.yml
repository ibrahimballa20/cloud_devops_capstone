version: 2.1
commands:
  setupawscli:
    description: Install AWS CLI
    steps:
      - run:
          name: Install AWS on Runner
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
  setupkubectl:
    description: Install Kubectl on Runner
    steps:
      - run:
          name: Download and Install Kubectl
          command: |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
  setupeksctl:
    description: Install eksctl
    steps:
      - run:
          name: Install eksctl
          command: |
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
  configureaws:
    description: Configure AWS CLI
    steps:
      - run:
          name: Configure AWS CLI
          command: |
            export TERM=xterm
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set default.region $AWS_DEFAULT_REGION
  destroy-environment:
    description: Destroy Kubernetes Stack on Fail
    parameters:
      envname:
        default: "udacity-capstone-project"
        type: string
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
             aws cloudformation delete-stack --stack-name eksctl-<< parameters.envname >>-nodegroup
             aws cloudformation delete-stack --stack-name eksctl-<< parameters.envname >>-cluster

jobs:
  install-build-lint:
    docker:
      - image: python:3.9-buster
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      # run lint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint
  build-image-push:
    docker:
      - image: circleci/golang:1.11.2
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Build and Tag Docker Image
          command: |
            docker build --tag=$DOCKER_IMAGE_NAME .
            docker image ls
      - run:
          name: Upload Docker to Dockerhub
          command: |
            echo "Docker ID and Image: $DOCKER_IMAGE_NAME"
            docker login -u="$DOCKERHUB_USERNAME" -p="$DOCKERHUB_PASSWORD"
            docker tag $DOCKER_IMAGE_NAME $DOCKERHUB_USERNAME/$DOCKER_IMAGE_NAME
            docker push $DOCKERHUB_USERNAME/$DOCKER_IMAGE_NAME
  create-kubernetes-stack:
    docker:
      - image: cimg/python:3.11.1-node
    steps:
      - checkout
      - setupawscli
      - configureaws
      - setupkubectl
      - setupeksctl
      - run:
          name: Create EKS Cluster
          command: |
            aws cloudformation list-exports > stacks.txt
            if [ $(grep -i "eksctl-udacity-capstone-project-cluster" stacks.txt | wc -l) -ge 1 ]
              then
                echo "Kubernetes Cluster Stack Exists Move On to Next Step"

              else
                eksctl create cluster --name $ENVIRONMENT_NAME --version 1.23 --region $AWS_DEFAULT_REGION --nodegroup-name $ENVIRONMENT_NAME --node-type t2.medium --nodes-min 2 --nodes-max 4 --managed

            fi
  configure-kubernetes-stack:
    docker:
      - image: cimg/python:3.11.1-node
    steps:
      - checkout
      - setupawscli
      - configureaws
      - setupkubectl
      - setupeksctl
      - run:
          name: Configure EKS Cluster
          command: |
            cd .circleci
            aws eks update-kubeconfig --region $AWS_DEFAULT_REGION --name ${ENVIRONMENT_NAME}
            kubectl apply -f udacity-capstone-project-deployment.yaml -f  udacity-capstone-project-service.yaml
            sleep 60
            kubectl get deployment
            kubectl get nodes -o wide
            kubectl get pods -o wide
            kubectl get all
      - destroy-environment:
          envname: ${ENVIRONMENT_NAME}
workflows:
  default:
    jobs:
       - install-build-lint
       - build-image-push:
           requires:
            - install-build-lint
       - create-kubernetes-stack
       - configure-kubernetes-stack:
            requires: [build-image-push,create-kubernetes-stack]
